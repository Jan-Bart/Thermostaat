<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- The above 3 meta tags *must* come first in the head; any other head content must come *after* these tags -->
  <title>Thermostat</title>
  <link rel="shortcut icon" href="favicon.ico"/>

  <!-- Bootstrap -->
  <link href='http://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>
  <link href="css/bootstrap.min.css" rel="stylesheet">
  <link href="css/style.css" rel="stylesheet">

  <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
  <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
  <!--[if lt IE 9]>
  <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
  <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
  <![endif]-->
  <!--<script src="js/jquery.min.js"></script>-->
  <!--<script src="js/raphael-min.js"></script>-->
  <!--<script src="js/morris.js"></script>-->
  <!--<script src="js/prettify.min.js"></script>-->
  <script src="//d3js.org/d3.v3.min.js" charset="utf-8"></script>
  <style>
    path {
      stroke: steelblue;
      stroke-width: 2;
      fill: none;
    }

    #chart path.line {
      stroke: #ff1c36;
    }

    .axis path,
    .axis line {
      fill: none;
      stroke: grey;
      stroke-width: 1;
      shape-rendering: crispEdges;
    }
  </style>
</head>
<body id="body" class="<%= template %>">

<div class="row vertical-center">
  <div class="col-md-12 col-sm-12 col-xs-12">
    <div class="frame">
      <% include navigation %>
      <h2>Huiskamer</h2>
      <hr/>
      <h2>Temperatuur</h2>

      <div id="temperature" class="graph"></div>
      <div id="chart"></div>
      <h2>Vochtigheid</h2>

      <div id="chart-hum"></div>
      <div id="humidity" class="graph"></div>
      <hr/>
    </div>
  </div>
</div>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<!--<script src="js/bootstrap.min.js"></script>-->
<script src="js/script.js"></script>
<script>
  var dataset = <%- JSON.stringify(humHistory) %>;

  var sampsize = dataset.length;
  var temp = new Array();
  var hum = new Array();

  for (var i = 0; i < sampsize; i++) {
    temp[i] = {
      'date': new Date(dataset[i].recordDate),
      'temp': dataset[i].temp
    };
    hum[i] = {
      'date': new Date(dataset[i].recordDate),
      'hum': dataset[i].hum
    };
  }

  // Set the dimensions of the canvas / graph
  var margin = {top: 30,right: 20,bottom: 100,left: 50},
      width = 700 - margin.left - margin.right,
      height = 400 - margin.top - margin.bottom;

  // Set the ranges
  var x = d3.time.scale().range([0,width]);
  var y = d3.scale.linear().range([height,0]);

  // Define the axes
  var xAxis = d3.svg.axis().scale(x)
      .orient("bottom").ticks(10).tickFormat(d3.time.format("%d/%m %H:%m"));

  var yAxis = d3.svg.axis().scale(y)
      .orient("left").ticks(7);

  // Define the line
  var valueline = d3.svg.line()
      .x(function (d) {
        return x(d.date);
      })
      .y(function (d) {
        return y(d.temp);
      });

  // Adds the svg canvas
  var svg = d3.select("#chart")
      .append("svg")
      .attr("width",width + margin.left + margin.right)
      .attr("height",height + margin.top + margin.bottom)
      .append("g")
      .attr("transform",
      "translate(" + margin.left + "," + margin.top + ")");

  // Scale the range of the data
  x.domain(d3.extent(temp,function (d) {
    return d.date;
  }));
  y.domain([10,30]); // ,d3.max(data, function(d) { return d.close; })

  // Add the valueline path.
  svg.append("path")
      .attr("class","line")
      .attr("d",valueline(temp));

  // Add the X Axis
  svg.append("g")
      .attr("class","x axis")
      .attr("transform","translate(0," + height + ")")
      .call(xAxis).selectAll("text")
      .style("text-anchor","end")
      .attr("dx","-.8em")
      .attr("dy",".15em")
      .attr("transform","rotate(-65)");

  // Add the Y Axis
  svg.append("g")
      .attr("class","y axis")
      .call(yAxis);

  // HUM
  // Set the ranges
  var x = d3.time.scale().range([0,width]);
  var y = d3.scale.linear().range([height,0]);

  // Define the axes
  var xAxis = d3.svg.axis().scale(x)
      .orient("bottom").ticks(10);

  var yAxis = d3.svg.axis().scale(y)
      .orient("left").ticks(5);

  // Define the line
  var valueline = d3.svg.line()
      .x(function (d) {
        return x(d.date);
      })
      .y(function (d) {
        return y(d.hum);
      });

  // Adds the svg canvas
  var svg = d3.select("#chart-hum")
      .append("svg")
      .attr("width",width + margin.left + margin.right)
      .attr("height",height + margin.top + margin.bottom)
      .append("g")
      .attr("transform",
      "translate(" + margin.left + "," + margin.top + ")");

  // Scale the range of the data
  x.domain(d3.extent(hum,function (d) {
    return d.date;
  }));
  y.domain([30,80]);  // d3.max(hum, function(d) { return d.hum; })

  // Add the valueline path.
  svg.append("path")
      .attr("class","line")
      .attr("d",valueline(hum));

  // Add the X Axis
  svg.append("g")
      .attr("class","x axis")
      .attr("transform","translate(0," + height + ")")
      .call(xAxis);

  // Add the Y Axis
  svg.append("g")
      .attr("class","y axis")
      .call(yAxis);

</script>
</body>
</html>
